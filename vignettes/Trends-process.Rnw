% \VignetteIndexEntry{Processing 2014 Water Quality Data}
% \VignetteEngine{knitr::knitr}
% \VignetteDepends{Trends, MASS, NADA, sp, rgdal}

\documentclass{article}

\usepackage{mathpazo}
\usepackage[T1]{fontenc}
\usepackage{geometry}
\usepackage{url}
\usepackage[authoryear]{natbib}
\usepackage{xcolor}
\usepackage[hidelinks]{hyperref}
\usepackage{parskip}
\usepackage{subfig}

\renewcommand{\sfdefault}{lmss}
\renewcommand{\ttdefault}{lmtt}

\geometry{verbose, tmargin=2.5cm, bmargin=2.5cm, lmargin=2.5cm, rmargin=2.5cm}

\definecolor{dark-red}{rgb}{0.4, 0.15, 0.15}
\definecolor{medium-blue}{rgb}{0, 0, 0.5}

\hypersetup{colorlinks, urlcolor={medium-blue}, linkcolor={medium-blue}, citecolor={dark-red}}

\widowpenalties 1 10000
\raggedbottom

\makeatletter
\makeatother

\begin{document}

<<setup, include=FALSE, cache=FALSE>>=
try(knitr::opts_chunk$set(dev="pdf", tidy=FALSE, comment="#"), silent=TRUE)
options(warn=1)
options(width=90)
ptime <- proc.time()
@

\title{Processing 2014 Water Quality Data}

\author{Jason C. Fisher}

\maketitle

If \href{http://www.r-project.org/}{R} is not already installed on your computer, download and install the latest binary distribution from \href{http://cran.r-project.org/}{CRAN}.
Open an \textbf{R} session and install required packages with the following commands:
<<eval=FALSE>>=
install.packages(c("NADA", "rgdal"))
install.packages("Trends", repos = "http://jfisher-usgs.github.com/R/")
@

Load the \href{https://github.com/jfisher-usgs/Trends}{Trends} package into the current \textbf{R} session:
<<>>=
library(Trends)
@

Support for merging PDF files into a new file requires \href{http://www.pdflabs.com/tools/pdftk-server/}{PDFtk Server}, a cross-platform command-line tool for working with PDFs; download and install this software. 
Determine if \textbf{pdftk} is accessible from \textbf{R}:
<<>>=
print(merge.pdfs <- as.logical(nchar(Sys.which("pdftk"))))
@

Set the full path name to the directory containing input files; list all files in this directory:
<<>>=
list.files(path.in <- system.file("extdata", "SIR2014", package = "Trends"))
@

Set the full path name to the output directory; if it doesn't already exist, create this directory:
<<>>=
path.out <- file.path(getwd(), paste0("Trends_", format(Sys.time(), "%Y%m%d%H%M%S")))
dir.create(path = path.out, showWarnings = FALSE)
@

Set the graphics type for output figures to a PDF file format:
<<>>=
gr.type <- "pdf"
@

Read observational data from a text file:
<<>>=
d <- ReadObservations(file.path(path.in, "Data.tsv"))
@

Read parameter configurations from a text file:
<<>>=
par.config <- ReadParConfig(file.path(path.in, "Config_Par.tsv"))
@

Read geo-referenced site locations from a point shapefile:
<<>>=
site.locs <- ReadSiteLocations(path.in, layer = "Site_Locations", verbose = FALSE)
@

Plot non-field parameters from 1960 through 2012, that is, the period-of-record:
<<>>=
plot.config <- ReadPlotConfig(file.path(path.in, "Config_Plots.tsv"))
PlotObservations(d, par.config = par.config, plot.config = plot.config,
                 sdate = "01/01/1960", edate = "01/01/2013", gr.type = gr.type,
                 path.out = file.path(path.out, "Data_1960-2012"),
                 merge.pdfs = merge.pdfs)
@

Plot non-field parameters from 1989 through 2012:
<<>>=
PlotObservations(d, par.config = par.config, plot.config = plot.config,
                 sdate = "01/01/1989", edate = "01/01/2013", gr.type = gr.type,
                 path.out = file.path(path.out, "Data_1989-2012"),
                 merge.pdfs = merge.pdfs)
@

Plot field parameters from 1960 through 2012:
<<>>=
plot.config <- ReadPlotConfig(file.path(path.in, "Config_Plots_Field.tsv"))
PlotObservations(d, par.config = par.config, plot.config = plot.config,
                 sdate = "01/01/1960", edate = "01/01/2013", gr.type = gr.type,
                 path.out = file.path(path.out, "Data_1960-2012_Field"),
                 merge.pdfs = merge.pdfs)
@

Plot field parameters from 1989 through 2012:
<<>>=
PlotObservations(d, par.config = par.config, plot.config = plot.config,
                 sdate = "01/01/1989", edate = "01/01/2013", gr.type = gr.type,
                 path.out = file.path(path.out, "Data_1989-2012_Field"),
                 merge.pdfs = merge.pdfs)
@

Run a trend analysis for censored-non-field parameters from 1989 through 2012:
<<>>=
plot.config <- ReadPlotConfig(file.path(path.in, "Config_Cen.tsv"))
out <- RunTrendAnalysis(d, par.config = par.config, plot.config = plot.config,
                        sdate = "01/01/1989", edate = "01/01/2013", is.censored = TRUE,
                        path.out = file.path(path.out, "Stats_1989-2012_Cen"),
                        gr.type = gr.type, site.locs = site.locs, merge.pdfs = merge.pdfs)
@

Run a trend analysis for uncensored-non-field parameters from 1960 through 2012:
<<>>=
plot.config <- ReadPlotConfig(file.path(path.in, "Config_Uncen.tsv"))
out <- RunTrendAnalysis(d, par.config=par.config, plot.config=plot.config,
                        sdate = "01/01/1960", edate = "01/01/2013", is.censored = FALSE,
                        path.out = file.path(path.out, "Stats_1960-2012_Uncen"),
                        gr.type = gr.type, site.locs = site.locs, merge.pdfs = merge.pdfs)
@

Run a trend analysis for uncensored-non-field parameters from 1989 through 2012:
<<>>=
out <- RunTrendAnalysis(d, par.config = par.config, plot.config = plot.config,
                        sdate = "01/01/1989", edate = "01/01/2013", is.censored = FALSE,
                        path.out = file.path(path.out, "Stats_1989-2012_Uncen"),
                        gr.type = gr.type, site.locs = site.locs, merge.pdfs = merge.pdfs)
@

Run a trend analysis for uncensored-field parameters from 1960 through 2012:
<<>>=
plot.config <- ReadPlotConfig(file.path(path.in, "Config_Uncen_Field.tsv"))
out <- RunTrendAnalysis(d, par.config = par.config, plot.config = plot.config,
                        sdate = "01/01/1960", edate = "01/01/2013", is.censored = FALSE,
                        path.out = file.path(path.out, "Stats_1960-2012_Uncen_Field"),
                        gr.type = gr.type, site.locs = site.locs, merge.pdfs = merge.pdfs)
@

Run a trend analysis for uncensored-field parameters from 1989 through 2012:
<<>>=
out <- RunTrendAnalysis(d, par.config = par.config, plot.config = plot.config,
                        sdate = "01/01/1989", edate = "01/01/2013", is.censored = FALSE,
                        path.out = file.path(path.out, "Stats_1989-2012_Uncen_Field"),
                        gr.type = gr.type, site.locs = site.locs, merge.pdfs = merge.pdfs)
@

Run a trend analysis for censored volatile organic compond (VOC) parameters from 1960 through 2012:
<<>>=
plot.config <- ReadPlotConfig(file.path(path.in, "Config_Cen_VOC.tsv"))
out <- RunTrendAnalysis(d, par.config = par.config, plot.config = plot.config,
                        sdate = "01/01/1960", edate = "01/01/2013", is.censored = TRUE,
                        path.out = file.path(path.out, "Stats_1960-2012_Cen_VOC"),
                        gr.type = gr.type, site.locs = site.locs, merge.pdfs = merge.pdfs)
@

Run a trend analysis for censored VOC parameters from 1989 through 2012:
<<>>=
out <- RunTrendAnalysis(d, par.config = par.config, plot.config = plot.config,
                        sdate = "01/01/1989", edate = "01/01/2013", is.censored = TRUE,
                        path.out = file.path(path.out, "Stats_1989-2012_Cen_VOC"),
                        gr.type = gr.type, site.locs = site.locs, merge.pdfs = merge.pdfs)
@

To reprocess the 2014 water quality data, evaluate R code extracted from this vignette using the following command:
<<eval=FALSE>>=
source(system.file("doc", "Trends-process.R", package = "Trends"), echo = TRUE)
list.files(path.out, full.names = TRUE, recursive = TRUE) # path names of output files
@

Total processing time for this vignette was \Sexpr{format(round((proc.time() - ptime)["elapsed"] / 60, digits=0))} minutes.
Version information about \textbf{R} and loaded packages is as follows:
<<echo=FALSE, results="asis">>=
print(toLatex(sessionInfo(), locale=FALSE))
@

\end{document}
